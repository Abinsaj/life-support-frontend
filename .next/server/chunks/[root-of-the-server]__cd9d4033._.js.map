{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/abinsaj/Desktop/I-Learning/Frontend/src/app/api/login/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\"\n\nexport async function POST(request) {\n  try {\n    const { email, password } = await request.json()\n\n    const response = await fetch(`${process.env.BACKEND_URL}/api/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n\n    if (!response.ok) {\n      return NextResponse.json({ error: \"Invalid credentials\" }, { status: 401 })\n    }\n\n    const data = await response.json()\n\n    const responseObj = NextResponse.json(data)\n    responseObj.cookies.set(\"auth-token\", data.token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: 60 * 60 * 24 * 7,\n    })\n\n    return responseObj\n  } catch (error) {\n    console.error(\"Login error:\", error)\n    return NextResponse.json({ error: \"Login failed\" }, { status: 500 })\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9C,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE;YACxE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,MAAM,cAAc,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACtC,YAAY,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,KAAK,EAAE;YAChD,UAAU;YACV,QAAQ,oDAAyB;YACjC,QAAQ,KAAK,KAAK,KAAK;QACzB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;AACF","debugId":null}}]
}